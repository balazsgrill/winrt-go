// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package storage

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const GUIDIStorageFile2 string = "954e4bcf-0a77-42fb-b777-c2ed58a52e44"
const SignatureIStorageFile2 string = "{954e4bcf-0a77-42fb-b777-c2ed58a52e44}"

type IStorageFile2 struct {
	ole.IInspectable
}

type IStorageFile2Vtbl struct {
	ole.IInspectableVtbl

	OpenWithOptionsAsync                uintptr
	OpenTransactedWriteWithOptionsAsync uintptr
}

func (v *IStorageFile2) VTable() *IStorageFile2Vtbl {
	return (*IStorageFile2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IStorageFile2) OpenWithOptionsAsync(accessMode FileAccessMode, options StorageOpenOptions) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().OpenWithOptionsAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(accessMode),           // in FileAccessMode
		uintptr(options),              // in StorageOpenOptions
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *IStorageFile2) OpenTransactedWriteWithOptionsAsync(options StorageOpenOptions) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().OpenTransactedWriteWithOptionsAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(options),              // in StorageOpenOptions
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
