// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package storage

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const GUIDIStorageFilePropertiesWithAvailability string = "afcbbe9b-582b-4133-9648-e44ca46ee491"
const SignatureIStorageFilePropertiesWithAvailability string = "{afcbbe9b-582b-4133-9648-e44ca46ee491}"

type IStorageFilePropertiesWithAvailability struct {
	ole.IInspectable
}

type IStorageFilePropertiesWithAvailabilityVtbl struct {
	ole.IInspectableVtbl

	GetIsAvailable uintptr
}

func (v *IStorageFilePropertiesWithAvailability) VTable() *IStorageFilePropertiesWithAvailabilityVtbl {
	return (*IStorageFilePropertiesWithAvailabilityVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IStorageFilePropertiesWithAvailability) GetIsAvailable() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsAvailable,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}
