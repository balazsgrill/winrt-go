// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package storage

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const GUIDIStorageFolder2 string = "e827e8b9-08d9-4a8e-a0ac-fe5ed3cbbbd3"
const SignatureIStorageFolder2 string = "{e827e8b9-08d9-4a8e-a0ac-fe5ed3cbbbd3}"

type IStorageFolder2 struct {
	ole.IInspectable
}

type IStorageFolder2Vtbl struct {
	ole.IInspectableVtbl

	TryGetItemAsync uintptr
}

func (v *IStorageFolder2) VTable() *IStorageFolder2Vtbl {
	return (*IStorageFolder2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IStorageFolder2) TryGetItemAsync(name string) (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	nameHStr, err := ole.NewHString(name)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().TryGetItemAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(nameHStr),             // in string
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
