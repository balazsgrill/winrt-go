// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package storage

import (
	"runtime"
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureStorageFolder string = "rc(Windows.Storage.StorageFolder;{72d1cb78-b3ef-4f75-a80b-6fd9dae2944b})"

type StorageFolder struct {
	ole.IUnknown
}

const GUIDiStorageFolder3 string = "9f617899-bde1-4124-aeb3-b06ad96f98d4"
const SignatureiStorageFolder3 string = "{9f617899-bde1-4124-aeb3-b06ad96f98d4}"

type iStorageFolder3 struct {
	ole.IInspectable
}

type iStorageFolder3Vtbl struct {
	ole.IInspectableVtbl

	TryGetChangeTracker uintptr
}

func (v *iStorageFolder3) VTable() *iStorageFolder3Vtbl {
	return (*iStorageFolder3Vtbl)(unsafe.Pointer(v.RawVTable))
}

const GUIDiStorageFolderStatics string = "08f327ff-85d5-48b9-aee9-28511e339f9f"
const SignatureiStorageFolderStatics string = "{08f327ff-85d5-48b9-aee9-28511e339f9f}"

type iStorageFolderStatics struct {
	ole.IInspectable
}

type iStorageFolderStaticsVtbl struct {
	ole.IInspectableVtbl

	StorageFolderGetFolderFromPathAsync uintptr
}

func (v *iStorageFolderStatics) VTable() *iStorageFolderStaticsVtbl {
	return (*iStorageFolderStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func StorageFolderGetFolderFromPathAsync(path string) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Storage.StorageFolder", ole.NewGUID(GUIDiStorageFolderStatics))
	if err != nil {
		return nil, err
	}
	v := (*iStorageFolderStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	pathHStr, err := ole.NewHString(path)
	if err != nil {
		return nil, err
	}
	hr, _, _ := syscall.SyscallN(
		v.VTable().StorageFolderGetFolderFromPathAsync,
		uintptr(unsafe.Pointer(v)),                             // this is a static func, so there's no this
		uintptr(pathHStr),             // in string
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)
	runtime.KeepAlive(pathHStr)
	runtime.KeepAlive(inspectable)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
