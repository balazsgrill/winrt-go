// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package streams

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const GUIDIInputStreamReference string = "43929d18-5ec9-4b5a-919c-4205b0c804b6"
const SignatureIInputStreamReference string = "{43929d18-5ec9-4b5a-919c-4205b0c804b6}"

type IInputStreamReference struct {
	ole.IInspectable
}

type IInputStreamReferenceVtbl struct {
	ole.IInspectableVtbl

	OpenSequentialReadAsync uintptr
}

func (v *IInputStreamReference) VTable() *IInputStreamReferenceVtbl {
	return (*IInputStreamReferenceVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IInputStreamReference) OpenSequentialReadAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().OpenSequentialReadAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
